#!/bin/bash

echo "üöÄ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –Ω–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã –°–ö–£–î —Å aiogram"
echo "========================================"

# 1. –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–∫—Ç—É–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
echo ""
echo "üìÇ 1. –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–∫—Ç—É–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –∏–∑ —Å—Ç–∞—Ä–æ–π —Å–∏—Å—Ç–µ–º—ã..."
cd /home/SKUD_iogram

if [ -f "/home/SKUD/SKUD_Python/data/attendance.csv" ]; then
    cp /home/SKUD/SKUD_Python/data/attendance.csv data/attendance.csv
    echo "‚úÖ attendance.csv —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω"
    echo "üìä –ü–æ—Å–ª–µ–¥–Ω–∏–µ –∑–∞–ø–∏—Å–∏:"
    tail -3 data/attendance.csv
else
    echo "‚ùå –§–∞–π–ª attendance.csv –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å—Ç–∞—Ä–æ–π —Å–∏—Å—Ç–µ–º–µ"
    echo "üìÑ –°–æ–∑–¥–∞–µ–º –ø—É—Å—Ç–æ–π —Ñ–∞–π–ª..."
    echo "date,employee,arrival,departure" > data/attendance.csv
fi

if [ -f "/home/SKUD/SKUD_Python/data/employees.json" ]; then
    cp /home/SKUD/SKUD_Python/data/employees.json data/employees.json
    echo "‚úÖ employees.json —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω"
    echo "üë• –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤: $(cat data/employees.json | python3 -c "import sys, json; print(len(json.load(sys.stdin)))")"
else
    echo "‚ùå –§–∞–π–ª employees.json –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å—Ç–∞—Ä–æ–π —Å–∏—Å—Ç–µ–º–µ"
    echo "üìÑ –°–æ–∑–¥–∞–µ–º –ø—É—Å—Ç–æ–π —Ñ–∞–π–ª..."
    echo "{}" > data/employees.json
fi

# 2. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Flask –µ—Å–ª–∏ –Ω–µ—Ç
echo ""
echo "üì¶ 2. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
source venv/bin/activate
pip install flask==2.3.3
echo "‚úÖ Flask —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"

# 3. –°–æ–∑–¥–∞–Ω–∏–µ systemd service –¥–ª—è API
echo ""
echo "üîß 3. –°–æ–∑–¥–∞–Ω–∏–µ —Å–ª—É–∂–±—ã API —Å–µ—Ä–≤–µ—Ä–∞..."
cp skud-api.service /etc/systemd/system/
systemctl daemon-reload
echo "‚úÖ –°–ª—É–∂–±–∞ API —Å–æ–∑–¥–∞–Ω–∞"

# 4. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Nginx –¥–ª—è –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è API –Ω–∞ –Ω–æ–≤—ã–π —Å–µ—Ä–≤–µ—Ä
echo ""
echo "üåê 4. –ü–µ—Ä–µ–Ω–∞—Å—Ç—Ä–æ–π–∫–∞ Nginx –¥–ª—è –Ω–æ–≤–æ–≥–æ API..."

# –°–æ–∑–¥–∞–µ–º –±—ç–∫–∞–ø —Ç–µ–∫—É—â–µ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
cp /etc/nginx/sites-available/skud /etc/nginx/sites-available/skud.backup
echo "üíæ –°–æ–∑–¥–∞–Ω –±—ç–∫–∞–ø: skud.backup"

# –ò–∑–º–µ–Ω—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é skud
cat > /etc/nginx/sites-available/skud << 'EOF'
server {
    listen 80;
    server_name 194.87.43.42;

    # API —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã —Ç–µ–ø–µ—Ä—å –∏–¥—É—Ç –Ω–∞ –Ω–æ–≤—ã–π —Å–µ—Ä–≤–µ—Ä
    location /api/ {
        proxy_pass http://127.0.0.1:5001;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # –í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –æ—Å—Ç–∞–µ—Ç—Å—è –Ω–∞ —Å—Ç–∞—Ä–æ–º —Å–µ—Ä–≤–µ—Ä–µ
    location / {
        proxy_pass http://127.0.0.1:5000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /static {
        alias /home/SKUD/SKUD_Python/static;
    }
}
EOF

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º Nginx
nginx -t
if [ $? -eq 0 ]; then
    systemctl reload nginx
    echo "‚úÖ Nginx –ø–µ—Ä–µ–Ω–∞—Å—Ç—Ä–æ–µ–Ω: API ‚Üí –Ω–æ–≤—ã–π —Å–µ—Ä–≤–µ—Ä, –≤–µ–± ‚Üí —Å—Ç–∞—Ä—ã–π"
else
    echo "‚ùå –û—à–∏–±–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Nginx, –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –±—ç–∫–∞–ø"
    cp /etc/nginx/sites-available/skud.backup /etc/nginx/sites-available/skud
    systemctl reload nginx
    exit 1
fi

# 5. –ó–∞–ø—É—Å–∫ —Å–ª—É–∂–±
echo ""
echo "üöÄ 5. –ó–∞–ø—É—Å–∫ –Ω–æ–≤—ã—Ö —Å–ª—É–∂–±..."

# –ó–∞–ø—É—Å–∫–∞–µ–º API —Å–µ—Ä–≤–µ—Ä
systemctl enable skud-api
systemctl start skud-api
sleep 3

if systemctl is-active --quiet skud-api; then
    echo "‚úÖ API —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω —É—Å–ø–µ—à–Ω–æ"
else
    echo "‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ API —Å–µ—Ä–≤–µ—Ä–∞"
    systemctl status skud-api
fi

# –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç —Å –Ω–æ–≤—ã–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
systemctl restart skud-bot
sleep 3

if systemctl is-active --quiet skud-bot; then
    echo "‚úÖ Telegram –±–æ—Ç –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω —É—Å–ø–µ—à–Ω–æ"
else
    echo "‚ùå –û—à–∏–±–∫–∞ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ Telegram –±–æ—Ç–∞"
    systemctl status skud-bot
fi

# 6. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏
echo ""
echo "üîç 6. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏..."

# –ü—Ä–æ–≤–µ—Ä—è–µ–º API
echo "üì° –ü—Ä–æ–≤–µ—Ä–∫–∞ API —Å–µ—Ä–≤–µ—Ä–∞:"
if curl -s http://localhost:5001/api/health > /dev/null; then
    echo "‚úÖ API —Å–µ—Ä–≤–µ—Ä –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ –ø–æ—Ä—Ç—É 5001"
    echo "üìä –°—Ç–∞—Ç—É—Å API:"
    curl -s http://localhost:5001/api/health | python3 -m json.tool
else
    echo "‚ùå API —Å–µ—Ä–≤–µ—Ä –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç"
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–ª—É–∂–±—ã
echo ""
echo "üîß –°—Ç–∞—Ç—É—Å —Å–ª—É–∂–±:"
echo "  API —Å–µ—Ä–≤–µ—Ä: $(systemctl is-active skud-api)"
echo "  Telegram –±–æ—Ç: $(systemctl is-active skud-bot)"
echo "  Nginx: $(systemctl is-active nginx)"

# –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ—Ä—Ç—ã
echo ""
echo "üåê –°–µ—Ç–µ–≤—ã–µ –ø–æ—Ä—Ç—ã:"
ss -tulpn | grep ":500[01]" || echo "–ü–æ—Ä—Ç—ã 5000-5001 –Ω–µ –∑–∞–Ω—è—Ç—ã"

# 7. –†–µ–∑—É–ª—å—Ç–∞—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
echo ""
echo "üìã –†–ï–ó–£–õ–¨–¢–ê–¢ –ù–ê–°–¢–†–û–ô–ö–ò:"
echo "======================================"
echo ""
echo "‚úÖ ESP32 –ù–ï –ù–£–ñ–ù–û –ü–ï–†–ï–ù–ê–°–¢–†–ê–ò–í–ê–¢–¨!"
echo "   URL –æ—Å—Ç–∞–µ—Ç—Å—è —Ç–æ—Ç –∂–µ: http://194.87.43.42/api/attendance"
echo "   Nginx —Ç–µ–ø–µ—Ä—å –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ—Ç –∑–∞–ø—Ä–æ—Å—ã –Ω–∞ –Ω–æ–≤—ã–π API"
echo ""
echo "üîÑ –ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç:"
echo "   ESP32 ‚Üí Nginx:80 ‚Üí API:5001 ‚Üí SKUD_iogram/data/ ‚Üí Telegram"
echo ""
echo "üß™ –î–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:"
echo "   curl -X POST http://194.87.43.42/api/attendance \\"
echo "     -H 'Content-Type: application/json' \\"
echo "     -d '{\"serial\":\"TEST123\",\"time\":\"$(date '+%Y-%m-%d %H:%M:%S')\"}'"
echo ""
echo "üåê –î–æ—Å—Ç—É–ø –∫ —Å–∏—Å—Ç–µ–º–µ:"
echo "   - –í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å: http://194.87.43.42/ (—Å—Ç–∞—Ä–∞—è —Å–∏—Å—Ç–µ–º–∞)"
echo "   - API –¥–ª—è ESP32: http://194.87.43.42/api/ (–Ω–æ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞)"
echo "   - –û—Ç—á–µ—Ç—ã Telegram: –Ω–æ–≤—ã–π –±–æ—Ç —Å –∞–∫—Ç—É–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏"

echo ""
echo "‚úÖ –ù–ê–°–¢–†–û–ô–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê!"
echo ""
echo "üìù –ß—Ç–æ –¥–∞–ª—å—à–µ:"
echo "   1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏: journalctl -u skud-api -f"
echo "   2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –±–æ—Ç–∞: journalctl -u skud-bot -f"
echo "   3. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ ESP32 –Ω–∞ –Ω–æ–≤—ã–π URL"
echo "   4. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ —Ä–∞–±–æ—Ç—É —Å–∏—Å—Ç–µ–º—ã"
echo ""
echo "üîç –§–∞–π–ª—ã –ª–æ–≥–æ–≤:"
echo "   API: /home/SKUD_iogram/api.log"
echo "   Bot: /home/SKUD_iogram/telegram_bot.log"
